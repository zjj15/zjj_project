
GIT：
永久删除文件后找回：

删除：rm a.txt
查看：git status 
添加到暂存区：git add a.txt
提交：git commit -m "delete a.txt" a.txt

查看所有版本历史记录：git reflog

回退到文件未被删除的版本：git reset --hard 版本号


添加到暂存区的文件删除文件找回：



python：

i 0 1 2 3 4 5
sum 0 1 3 6 10

def Func(n):
	Func(n-1)+n

for i in range(1,10):
	i=(i-1)+(i+1)-2

while(i<10):

mysql:
python中使用数据库：
#导入mysql包
import mysql.connector

创建数据库连接：
mydb = mysql.connector.connect(
	host="localhost" #数据库主机地址
	user="yourusername" #数据库用户名
	passwd="yourpassword" #数据库密码
	database="runoob_db" #如果要直接连接一个数据库就加上这一句
)
print(mydb)


#数据库游标cursor
mycursor = mydb.cursor()
#查看数据库是否存在
mycursor.execute("show Databases")
#创建一个数据库
mycursor.execute("Create database runoob_db")
#创建数据表,sites是数据表的表名
mycursor.execute(""create table sites(name varchar(255),url varchar(255)))
#查看数据表是否已经存在
mycursor.execute("show tables")
#主键设置(表已存在时)
mycursor.execute("alter table sites add column id int auto_increment primary key")
#主键设置(表还未创建时)
mycursor.execute("CREATE TABLE sites (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), url VARCHAR(255))")

#插入数据
mysql里面的用法是：
mysql> INSERT INTO runoob_tbl
    -> (runoob_title, runoob_author, submission_date)
    -> VALUES
    -> ("JAVA 教程", "RUNOOB.COM", '2016-05-06');
Query OK, 1 rows affected (0.00 sec)
mysql>

python里面的用法是：
Sql="insert into sites(name,url) values(%s,%s)"
val=("RUNOOB", "https://www.runoob.com")
mycursor.execute(sql,val)
mydb.commit()#数据表内容有更新，必须使用到该语句
print(mycursor.rowcount, "记录插入成功")#rowcount应该是一个属性


#批量插入数据
批量插入使用 executemany() 方法，该方法的第二个参数是一个元组列表，包含了我们要插入的数据：

sql = "INSERT INTO sites (name, url) VALUES (%s, %s)"
val = [
  ('Google', 'https://www.google.com'),
  ('Github', 'https://www.github.com'),
  ('Taobao', 'https://www.taobao.com'),
  ('stackoverflow', 'https://www.stackoverflow.com/')
]
mycursor.executemany(sql，val)
print(mycursor.rowcount, "记录插入成功")

#查询数据
mycursor.execute("SELECT * FROM sites")
myresult = mycursor.fetchall()     # fetchall() 获取所有记录
for x in myresult:
  print(x)
  
#读取指定的字段数据：
mycursor.execute("SELECT name, url FROM sites")

#读取一条数据：
mycursor.execute("SELECT * FROM sites")

myresult = mycursor.fetchone()

#读取指定数据
sql = "SELECT * FROM sites WHERE name ='RUNOOB'"
mycursor.execute(sql)
sql = "SELECT * FROM sites WHERE url LIKE '%oo%'" 
mycursor.execute(sql)

#为了防止数据库查询发生 SQL 注入的攻击，我们可以使用 %s 占位符来转义查询的条件：
sql = "SELECT * FROM sites WHERE name = %s"
na = ("RUNOOB", )
mycursor.execute(sql, na)
myresult = mycursor.fetchall()

#查询结果排序可以使用 ORDER BY 语句，默认的排序方式为升序，关键字为 ASC，如果要设置降序排序，可以设置关键字 DESC。
sql = "SELECT * FROM sites ORDER BY name"
mycursor.execute(sql)
#按 name 字段字母的降序排序：
sql = "SELECT * FROM sites ORDER BY name DESC"

#如果我们要设置查询的数据量，可以通过 "LIMIT" 语句来指定
mycursor.execute("SELECT * FROM sites LIMIT 3")
 
myresult = mycursor.fetchall()
 
for x in myresult:
  print(x)

#也可以指定起始位置，使用的关键字是 OFFSET：
mycursor.execute("SELECT * FROM sites LIMIT 3 OFFSET 1")  # 0 为 第一条，1 为第二条，以此类推


#sql = "DELETE FROM sites WHERE name = 'stackoverflow'"

	

