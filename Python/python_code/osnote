from autost.api import *
import os


threshold = 0.8
target_template = Template('pic/capture_20210510150304610774.png')




def get_lateset_png(path):
    log_files = [os.path.join(path, log) for log in os.listdir(path) if log.endswith(".txt") and log.startswith("log_")]
    if len(log_files):
        with open(log_files[0], "r", encoding="utf8") as f:
            file_content = f.readlines()
        if file_content[-1].find("case result: Passed(0)") != -1:
            
            return None
    filenames = [os.path.join(path, pic) for pic in os.listdir(path) if pic.endswith(".png")]
    filenames.sort()
    if len(filenames):
        return filenames[-1]
    else:
        return None
 
 
 
def walk_files(path):
    latest_png = get_lateset_png(path)
    if latest_png:
        match_confidence, _ = match_template(Template('pic/capture_20210510150304610774.png'), Template(latest_png))
        print("=======matched========", match_confidence, latest_png)
        with open("stat.txt", "a+") as f:
            f.writelines("\t".join([str(match_confidence), latest_png + "\n"]))
#        if match_confidence > threshold:
#            print("=======matched========", match_confidence, latest_png)
 
 
 
 
i = 0
path = r'D:\gitlab\morley\Test\test2.tcs\log'
print("====path=======", path)
for log_dir in os.listdir(path):
    if os.path.isdir(os.path.join(path, log_dir)):
        walk_files(os.path.join(path, log_dir))
        i += 1
    if i > 4400:
        break
 
 
 
 
 
 
 import os

"""
    另一种尝试
"""



def show_files(path, all_files):
    files = os.listdir(path)
    # print(files)
    for file in files:
        # print(file)
        if os.path.isdir(path + '/' + file):
            # print(path + '/' + file)
            show_files(path + '/' + file, all_files)
        elif os.path.isfile(path + '/' + file):
            os.rename(path + '/' + file, path + '/aaa' + file)
            all_files.append(path + '/aaa' + file)

    return all_files


list_a = []
path = "e:/python/hello"
contents = show_files(path, list_a)
for content in contents:
    print(content)









import os


def show_files(path, all_files):
    # 首先遍历当前目录所有文件及文件夹
    file_list = os.listdir(path)
    # 准备循环判断每个元素是否是文件夹还是文件，是文件的话，把名称传入list，是文件夹的话，递归
    for file in file_list:
        # 利用os.path.join()方法取得路径全名，并存入cur_path变量，否则每次只能遍历一层目录
        cur_path = os.path.join(path, file)
        # 判断是否是文件夹
        if os.path.isdir(cur_path):
            # os.rename(cur_path, cur_path+'asdf')
            # cur_path = cur_path+'asdf'
            show_files(cur_path, all_files)
        else:
            """
                给每个文件重命名
                思路：把文件路径用split()函数分割成列表，然后再修改最后的元素
            """
            name_all = cur_path.split('\\')

            # print(cur_path)
            # print(name)
            os.rename(cur_path, '\\'.join(name_all[0:-1])+'\\asdf'+name_all[-1])
            all_files.append(file)

    return all_files


# 传入空的list接收文件名
contents = show_files("e:\\python\\hello", [])
# 循环打印show_files函数返回的文件名列表
for content in contents:
    print(content)












    #coding=utf-8
import os
import os.path
rootdir = r"./img"# 指明被遍历的文件夹

for parent,dirnames,filenames in os.walk(rootdir):#三个参数：分别返回1.父目录 2.所有文件夹名字（不含路径） 3.所有文件名字
    for filename in filenames:#文件名
        nameList=filename.split('.')
        print nameList
        filenew=nameList[0]+'.jpg'
        print filenew
        os.rename(os.path.join(parent,filename),os.path.join(parent,filenew))#重命名

'''
用到知识点：

1.os.walk(dir):遍历指定目录

2.os.renme(old, new):文件重命名

3.os.path.join(a, b):连接组合路径
'''