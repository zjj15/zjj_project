1.变量的使用时候先赋值（变量一般和值绑定，通过变量找到变量对应的值）
2.变量名和java命名相同
3.字符串 单引号标记  str = 'aaaa'  原始字符串 str = r'aaaa'
 跨越多行的字符串 str = """ 字符串 """
4.条件分支语句
   if 条件 :
      条件为true执行操作
   else:
      条件为false执行操作

如果循环嵌套的话 elif （else if 的缩写）

while 条件 :
      条件为true执行操作

逻辑操作 and 相当于java &&
 or
 not   not false>>> true   not true>>>false

python 的数据类型   e记法 0.5e-27 相当于0.5 x 10―27 (10的-27次幂)
boolean 有 true false

int    转字符串
a='520' b=int(a)  print(b) >>>520 字符串转换为整形  如果把a='520'换成a='王立航'会出错 python不允许字符直接转换成整数 

float  转int
a=5.99 c=int(a) print(c) >>>5 python会砍掉后面小数

str   转float
a = '520' b=float(a) print(b) >>> 520.0

1.type（） 内置函数（BIF）返回数据的类型 
2. a='王立航'  isinstance(a.str) >>> true
运算符 /正常除法操作  //相当于java的 / 取整操作 
 **幂运算 3**3 相当于3*3*3

3. 三元操作符
if x<y:
   small=x             -->>  small = x if x<y else y
else:                
   small=y      

assert(断言) 
当assert后面的条件为假时，程序自动崩溃，抛出AssertionError异常

for循环
 for 目标名字 in 变量名字
  循环体
 如 a = '王立航'
 for i in a :
 print（i+end( )）  >>>王 立 航

range(2,9) 左闭右开取值2，3,4,5,6,7,8  步长默认为1  range(1,10,2) >>>1,3,5,7,9
range(5) 取值 0,1,2,3,4    一般配合for使用 如 for i in range(5) >>> 0,1,2,3,4

break continue 和 java的一样
 
列表 empty =[] 创建一个空列表
empty =['王立航'，'徐建华','周炎光'] 
empty.append('可以添加一个参数')
empty.extend(['参数一','参数二'])
empty.insert(1,'参数') 在指定位置添加

获取数组中的元素 通过索引 和java一样 empty[0]
empty.remove('王')
del empty[0] 删除第一个
del empty 删除列表
empty.pop() 查看并删除  列表为栈结构
empty.pop（1）删除元素
empty[1:3] 左闭右开 

列表 
 列表之间可以相互比较 可以相加
 列表里面可以有列表  list = [123,['xsa','xax'],456]
 访问列表的列表中的值 list[1][1]  >>> xsa
  list.reverse() 反转列表
  list.sort() 将列表进行从小到大排序默认归并排序  list.sort(reverse=true)从大到小排序
  list1 =list2[:] 分片拷贝 list2改了list1内容不变
  list1=list2 拷贝 指向同一内容 list2变 list1也变 

元组（和列表相似） 不可以改变 不能直接进行插入删除操作 像java的数组 
tuple =(1,2,3,4,5,6,7,8,9)
 取值 tuple[1]  tuple[5:]
 如插入操作 temp =('xax','aa','cc','dd')
    temp =temp[:2]+('bb',)+temp[2:]  >>> xax aa bb cc dd

  del temp 删除元组

字符串 str ='i love you'  插入和元组差不多 
str.captitalize() 返回一个新字符串，第一个字符大写
str.casefold() 全部小写

格式化字符串  format（）

函数

 
