Linux常用命令（只记录最常用得命令）：
1.ls 命令
就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。
(1)ls -a 
列出目录所有文件，包含以.开始的隐藏文件
(2)ls -l 
除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来

2.cd 命令
(1)cd /
进入根目录
例：autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ cd /
autost@DESKTOP-IM2UOV2 MINGW64 /
(2)cd ~ 
进入 "home" 目录
例：autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ cd ~
autost@DESKTOP-IM2UOV2 MINGW64 ~
(3)cd -
返回进入此目录之前所在目录
例：autost@DESKTOP-IM2UOV2 MINGW64 ~
$ cd -
/c/Users/autost/Desktop/ZjjGit/zjj_project
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
(4)cd …/ 或者 cd..
返回上一层目录


3.pwd 命令, pwd 命令用于查看当前工作目录路径。

4.mkdir 命令
(1)mkdir -p：
创建一条完整的路径,当路径中的某个目录已经存在时，跳过该目录继续创建下一级目录,
若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。
例：autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ mkdir -p excise_tmp/tmp/t1
(2)mkdir -m：
在创建目录的同时设定权限
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ mkdir -p -m 664 excise_tmp2/tmp/t2

5.rm 命令
删除一个目录中的一个或多个文件或目录，如果没有使用 -r 选项，则 rm 不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。

(1)rm -i *.log
删除任何 .log 文件，删除前逐一询问确认：

例：删除a.log,b.log,c.log,d.log
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
a.log  d.log   Mysql/        README.md  每日学习记录.txt  学习路线.jpg
b.log  Git/    postman工具/  Shell/     说明文档.txt      杨幂语录.docx
c.log  Linux/  Python/       Thumbs.db  学习参照表.pptx   张晶晶_简历_New.docx
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ rm -i *.log
rm: remove regular empty file 'a.log'? y
rm: remove regular empty file 'b.log'? y
rm: remove regular empty file 'c.log'? y
rm: remove regular empty file 'd.log'? y
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
Git/    postman工具/  Shell/            说明文档.txt     杨幂语录.docx
Linux/  Python/       Thumbs.db         学习参照表.pptx  张晶晶_简历_New.docx
Mysql/  README.md     每日学习记录.txt  学习路线.jpg

(2)rm -rf test 
删除 test 子目录及子目录中所有档案删除，并且不用一一确认：

例：删除所有e开头的文件夹
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
excise_tmp/   excise_tmp6/  Python/           说明文档.txt
excise_tmp2/  Git/          README.md         学习参照表.pptx
excise_tmp3/  Linux/        Shell/            学习路线.jpg
excise_tmp4/  Mysql/        Thumbs.db         杨幂语录.docx
excise_tmp5/  postman工具/  每日学习记录.txt  张晶晶_简历_New.docx
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ rm -rf e* 命令
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
Git/    postman工具/  Shell/            说明文档.txt     杨幂语录.docx
Linux/  Python/       Thumbs.db         学习参照表.pptx  张晶晶_简历_New.docx
Mysql/  README.md     每日学习记录.txt  学习路线.jpg

(3)rm -- t* 
删除以 - 开头的文件

例：删除t1,t2文件
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
Git/          Python/    t2.txt            学习参照表.pptx
Linux/        README.md  Thumbs.db         学习路线.jpg
Mysql/        Shell/     每日学习记录.txt  杨幂语录.docx
postman工具/  t1.txt     说明文档.txt      张晶晶_简历_New.docx
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ rm -- t*
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ ls
Git/    postman工具/  Shell/            说明文档.txt     杨幂语录.docx
Linux/  Python/       Thumbs.db         学习参照表.pptx  张晶晶_简历_New.docx
Mysql/  README.md     每日学习记录.txt  学习路线.jpg

6.rmdir 删除
注意：不能删除非空目录
当子目录被删除后使它也成为空目录的话，则顺便一并删除：

例：excisetemp文件夹下有1个文件两个文件夹：a.txt  child/  chuild/，
执行rmdir -p excisetemp/child/报错，但是删掉a.txt后excisetemp/child自动被删除
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/excisetemp (main)
$ ls
a.txt  child/  chuild/
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/excisetemp (main)
$ cd ..
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ rmdir -p excisetemp/child/
rmdir: failed to remove directory 'excisetemp': Directory not empty
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project (main)
$ rm excisetemp/a.txt
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/excisetemp (main)
$ ls
chuild/

7.mv 命令
移动文件或修改文件名，根据第二参i 数类型（如目录，则移动文件；如为文件则重命令该文件）。
当第二个参数为目录时，第一个参数可以是多个以空格分隔的文件或目录，然后移动第一个参数指定的多个文件到第二个参数指定的目录中。
(1)将文件 a.txt 重命名为 ab.1txt
mv a.txt ab.1txt

(2)将文件 b.og c.mg d.log ab.1txt 移动到tempss目录中
 mv b.og c.mg d.log ab.1txt  tempss/

(3)将文件 file1 改名为 file2，如果 file2 已经存在，则询问是否覆盖（不加参数i，就会直接覆盖）
$ mv -i b.og d.log
mv: overwrite 'd.log'? y

(4)移动当前文件夹下的所有文件到上一级目录
mv * ../

(5)复制上一级目录下的d.log到当前目录下
$ mv ../d.log  .


8.cp 命令（注意和MV命令的区别：mv是剪切，cp是拷贝，拷贝是指不影响原文件，复制一份内容到别处）
将源文件复制至目标文件，或将多个源文件复制至目标目录。
注意：命令行复制，如果目标文件已经存在会提示是否覆盖，而在 shell 脚本中，如果不加 -i 参数，则不会提示，而是直接覆盖！
(1)拷贝上级目录下的tempmp文件中的mp.mk文件到当前目录下（当前目录也有一个同名文件，不加参数i时直接替换）
$ cp ../tempmp/mp.mk  mp.mk
加参数i时提示是否要覆盖：
$ cp -i  ../tempmp/mp.mk  mp.mk
cp: overwrite 'mp.mk'? yes

(2)-r 复制目录及目录内所有项目
将上级目录下的tempmp文件里的内容连同整个tempmp文件全部拷贝到了当前文件夹下
$ cp -r ../tempmp  .
lihang@DESKTOP-03PD899 MINGW64 ~/Desktop/张晶晶Git/zjj_project/tempss (main)
$ ll
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 c.mg
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 d.log
-rw-r--r-- 1 lihang 197121 0 10月 21 21:12 mp.mk
drwxr-xr-x 1 lihang 197121 0 10月 21 21:19 tempmp/

将上级目录下的tempmp文件里的内容全部拷贝到了当前文件夹下(不包含tempmp文件)
$ cp ../tempmp/* .
lihang@DESKTOP-03PD899 MINGW64 ~/Desktop/张晶晶Git/zjj_project/tempss (main)
$ ll
total 0
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 c.mg
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 d.log
-rw-r--r-- 1 lihang 197121 0 10月 21 21:23 hhh.ak
-rw-r--r-- 1 lihang 197121 0 10月 21 21:23 mp.mk
-rw-r--r-- 1 lihang 197121 0 10月 21 21:23 mpmk
drwxr-xr-x 1 lihang 197121 0 10月 21 21:19 tempmp/

(3)-a 复制的文件与原文件时间一样，举例中用到了 cp -ra命令
$ cp  ../tempmp/*   .
lihang@DESKTOP-03PD899 MINGW64 ~/Desktop/张晶晶Git/zjj_project/tempss (main)
$ ll
total 0
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 c.mg
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 d.log
-rw-r--r-- 1 lihang 197121 0 10月 21 21:30 hhh.ak 
-rw-r--r-- 1 lihang 197121 0 10月 21 21:30 mp.mk #文件显示时间为当前被复制时的时间
-rw-r--r-- 1 lihang 197121 0 10月 21 21:30 mpmk
drwxr-xr-x 1 lihang 197121 0 10月 21 21:11 tempmp/
lihang@DESKTOP-03PD899 MINGW64 ~/Desktop/张晶晶Git/zjj_project/tempss (main)
$ cp -ra ../tempmp/*  .
lihang@DESKTOP-03PD899 MINGW64 ~/Desktop/张晶晶Git/zjj_project/tempss (main)
$ ll
total 0
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 c.mg
-rw-r--r-- 1 lihang 197121 0 10月 21 20:54 d.log
-rw-r--r-- 1 lihang 197121 0 10月 21 21:10 hhh.ak #文件显示时间为在tempmp文件中创建的时间
-rw-r--r-- 1 lihang 197121 0 10月 21 21:11 mp.mk #文件显示时间为在tempmp文件中创建的时间
-rw-r--r-- 1 lihang 197121 0 10月 21 21:11 mpmk #文件显示时间为在tempmp文件中创建的时间
drwxr-xr-x 1 lihang 197121 0 10月 21 21:11 tempmp/#文件显示时间为tempmp文件被创建的时间

9.cat命令
(1)cat filename,显示文件内容
例：$ cat c.mg
hello world
jjz

(2-1)从键盘创建一个文件: 只能创建新文件，不能编辑已有文件。(如果当前新建文件已存在就直接覆盖)
cat > filename
文件内容
例：$ cat > b.tlog
hello pp
;
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ cat b.tlog
hello pp
;
(2-2)从键盘创建一个文件,cat<<EOF，以EOF输入字符为标准输入结束
例1：$ cat > b.tlog <<EOF
> wonderful
> magical
> helpless
> uncomfortable
> very myself
> EOF
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ cat b.tlog
wonderful
magical
helpless
uncomfortable
very myself

例2：$ cat >d.log <<end
> hellomzz
> end

autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ cat d.log
hellomzz



(3)cat file1 file2 > file 将几个文件合并为一个文件:
$ cat b.tlog c.mg d.log hhh.ak mp.mk  > mpmk
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ ls
b.tlog  c.mg  d.log  hhh.ak  mp.mk  mpmk  tempmp/
autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ cat mpmk
hello world
jjz

(4-1)cat -n filename: 将文件里的内容加上行号输出
$ cat -n  c.mg
     1  hello world
     2  jjz
(4-2)cat -b filename:将文件里非空行的内容加上行号输出
 cat -b c.mg
     1  hello world
     2  #下面一行是空行

     3  jjz
(5)反向打印文件里的内容：tac命令
$ cat b.tlog
wonderful
magical
helpless
uncomfortable
very myself

autost@DESKTOP-IM2UOV2 MINGW64 ~/Desktop/ZjjGit/zjj_project/tempss (main)
$ tac b.tlog
very myself
uncomfortable
helpless
magical
wonderful

10.more命令
功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读，
而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示。


11.

	 



































