#牛客网做题笔记：
'1', '2138', 'male', '21', '北京大学', '3.4'
'2', '3214', 'male', NULL, '复旦大学', '4.0'
'3', '6543', 'female', '20', '北京大学', '3.2'
'4', '2315', 'female', '23', '浙江大学', '3.6'
'5', '5432', 'male', '25', '山东大学', '3.8'
'6', '2131', 'male', '28', '北京师范大学','3.3'



1.查询device_id数据前两行
select device_id from table1 limit 2;

2.查询device_id数据前两行并将字段名改为user_infors_example
做法1：SELECT device_id as user_infors_example from user_profile LIMIT 2;
做法2：SELECT device_id  user_infors_example from user_profile LIMIT 2; 不用as代表直接起别名

3.去重 distinct 字段名 
select distinct device_id from user_profile;

4.20岁及以上且23岁及以下
做法1：select device_id,gender,age from user_profile where age < 24;
做法2：SELECT device_id, gender, age FROM user_profile WHERE age >= '20' AND age <='23';
做法3：select device_id,gender,age from user_profile where age between 20 and 23;

5.查看除复旦大学以外的所有用户明细
做法1：select device_id,gender,age,university from user_profile where university !='复旦大学';
做法2：select device_id,gender,age,university from  user_profile where university NOT IN("复旦大学");
做法3：select device_id,gender,age,university from user_profile where university <> '复旦大学'
#注： ！=是以前sql标准，<>是现在使用的sql标准，推荐使用<>。

6.剔除没有获取到年龄的用户，请你取出所有年龄值不为空的用户明细数据。
做法1：select device_id,gender,age,university from user_profile where age is not null;

7.要找到学校为北大、复旦和山大的同学进行调研，请你取出相关数据
做法1：select device_id,gender,age,university,gpa from user_profile where university in('北京大学','复旦大学','山东大学');

8.要找到gpa在3.5以上的山东大学用户 或 gpa在3.8以上的复旦大学同学进行用户调研，请你取出相应数据
select device_id,gender,age,university,gpa from user_profile 
where (gpa >3.5 and university='山东大学')
or (gpa > 3.8 and university='复旦大学')


9.想要知道复旦大学学生gpa最高值是多少
做法1：SELECT gpa from user_profile order by university='复旦大学'DESC LIMIT 1;
做法2：select max(gpa) from user_profile where university='复旦大学'

10.想要看一下男性用户有多少人以及他们的平均gpa是多少，用以辅助设计相关活动，请你取出相应数据。
做法1：select 
count(gender) as male_num,
round(avg(gpa),1) as avg_gpa
from user_profile
where gender='male'
#Round函数是保留几位小数，所以这个意思就是gpa的平均值保留1位小数


————————————————————————————————————————表内容——————————————————————————————————————————
# id	device_id	gender	age	university	gpa	active_days_within_30	question_cnt	answer_cnt
1	    2138	    male	21	北京大学	3.4	    7	                        2	        12
2	    3214	    male		复旦大学	4	    15                      	5	        25  
3	    6543	    female	20	北京大学	3.2	    12	                        3	        30
4	    2315	    female	23	浙江大学	3.6	    5	                        1	        2
5	    5432	    male	25	山东大学	3.8	    20	                        15      	70
6	    2131	    male	28	山东大学	3.3	    15                      	7	        13
7	    4321	    male	28	复旦大学	3.6	    9	                        6	        52
————————————————————————————————————————表内容——————————————————————————————————————————

11.想要对每个学校不同性别的用户活跃情况和发帖数量进行分析，请分别计算出每个学校每种性别的用户数、30天内平均活跃天数和平均发帖数量
select gender, university,
count(gender) as user_num,
round(AVG(active_days_within_30),1) as avg_active_day,
round(AVG(question_cnt),1) as avg_question_cnt
from user_profile
group by university,gender;
考察点：group by 多字段

12.现在运营想查看每个学校用户的平均发贴和回帖情况，寻找低活跃度学校进行重点运营，请取出平均发贴数低于5的学校或平均回帖数小于20的学校。
select university,
round(AVG(question_cnt),1) as avg_question_cnt,
round(AVG(answer_cnt),1) as avg_answer_cnt
from user_profile
group by university HAVING round(AVG(question_cnt),1) < 5 or round(AVG(answer_cnt),1) < 20 ;


13.现在运营想要查看不同大学的用户平均发帖情况，并期望结果按照平均发帖情况进行升序排列，请你取出相应数据。
select university,
round(AVG(question_cnt),4) as avg_question_cnt
from user_profile
group by university order by round(AVG(question_cnt),4) ASC;


14.
SELECT question_practice_detail.device_id, 
question_practice_detail.question_id, 
question_practice_detail.result
from question_practice_detail INNER join user_profile on
question_practice_detail.device_id=user_profile.device_id
where university='浙江大学';


22.运营想要了解每个学校答过题的用户平均答题数量情况，请你取出数据。
select user_profile.university,
round(count(question_practice_detail.question_id) / count(DISTINCT question_practice_detail.device_id), 4) as avg_answer_cnt
from user_profile INNER JOIN question_practice_detail on user_profile.device_id = question_practice_detail.device_id
group by user_profile.university;


23.运营想要计算每个学校用户不同难度下的用户平均答题题目数情况，请你取出相应数据
SELECT user_profile.university,
question_detail.difficult_level,
count( question_practice_detail.question_id) / count(DISTINCT question_practice_detail.device_id)  as avg_answer_cnt
from user_profile INNER join question_practice_detail on user_profile.device_id=question_practice_detail.device_id
INNER join question_detail on question_practice_detail.question_id=question_detail.question_id
group by user_profile.university,question_detail.difficult_level;

24.运营想要查看参加了答题的山东大学的用户在不同难度下的平均答题题目数，请取出相应数据
SELECT user_profile.university,
question_detail.difficult_level,
count(question_practice_detail.question_id ) / count(distinct question_practice_detail.device_id) as avg_answer_cnt
from user_profile inner join question_practice_detail on question_practice_detail.device_id=user_profile.device_id
inner join question_detail on question_practice_detail.question_id=question_detail.question_id
group by user_profile.university, question_detail.difficult_level 
HAVING user_profile.university='山东大学';

25.现在运营想要分别查看学校为山东大学或者性别为男性的用户的device_id、gender、age和gpa数据，请取出相应结果，结果不去重。
SELECT device_id,gender,age,gpa
from user_profile 
where university ='山东大学'  
union all
SELECT device_id,gender,age,gpa
from user_profile 
where gender='male'

26.现在运营想要将用户划分为25岁以下和25岁及以上两个年龄段，分别查看这两个年龄段用户数量
本题注意：age为null 也记为 25岁以下
我：SELECT '25岁以下' as  age_cut,
count(if (age <25 ,true,null)) +( count(*)-count(age) ) as number
from user_profile
union 
SELECT '25岁及以上' as  age_cut,
count(if (age >=25 ,true,null))
from user_profile

别人1：SELECT '25岁以下' as  age_cut, count(device_id) number
from user_profile
where age< 25 or age is null
union 
SELECT '25岁及以上' as  age_cut,count(device_id) number
from user_profile
where age >=25

别人2：（IF(expr,v1,v2)	如果表达式 expr 成立，返回结果 v1；否则，返回结果 v2。）
SELECT
if(age<25 OR age IS NULL ,'25岁以下','25岁及以上') AS age_cut,
COUNT(device_id) AS Number
FROM
user_profile
GROUP BY
age_cut

27.现在运营想要将用户划分为20岁以下，20-24岁，25岁及以上三个年龄段，分别查看不同年龄段用户的明细情况，请取出相应数据。（注：若年龄为空请返回其他。）
select device_id,gender, 
if(age<20,'20岁以下',if(age between 20 and 24,'20-24岁',if(age>=25,'25岁及以上','其他'))) as age_cut
from user_profile;


28.现在运营想要计算出2021年8月每天用户练习题目的数量，请取出相应数据。
select DAY(date) AS day,
count(device_id) as question_cnt
from question_practice_detail
where MONTH(date)='08'
group by date 

**日期函数







30.题目：现在运营举办了一场比赛，收到了一些参赛申请，表数据记录形式如下所示，现在运营想要统计每个性别的用户分别有多少参赛者，请取出相应结果
select  SUBSTRING_INDEX(profile, ',', -1) as gender,
count( SUBSTRING_INDEX(profile, ',', -1)  ) as number
from user_submit
group by gender

**字符串截取函数
https://www.cnblogs.com/heyonggang/p/8117754.html


31.对于申请参与比赛的用户，blog_url字段中url字符后的字符串为用户个人博客的用户名，现在运营想要把用户的个人博客用户字段提取出单独记录为一个新的字段，请取出所需数据。
select device_id,
SUBSTRING_INDEX(blog_url, '/', -1) as user_name
from user_submit

**字符串截取函数


32.：现在运营举办了一场比赛，收到了一些参赛申请，表数据记录形式如下所示，现在运营想要统计每个年龄的用户分别有多少参赛者，请取出相应结果
SELECT SUBSTRING(profile, 12,2) as age,
count(SUBSTRING(profile, 12,2)) as number
from user_submit
group by age

别人：
SELECT SUBSTRING(profile, 12,2) as age,
count(device_id) as number
from user_submit
group by age

33.还没做出来：遇到问题：分组后取每组第一个数据
SELECT device_id,  university , gpa 
from(select device_id,  university , gpa from user_profile order by gpa ASC) a GROUP by university,gpa

SELECT * FROM(SELECT * FROM test ORDER BY create_time DESC) a GROUP BY address

SELECT * FROM(SELECT * FROM test ORDER BY create_time DESC LIMIT 10000) a GROUP BY address

37.现在运营想要取出用户信息表中的年龄和gpa数据，并先按照gpa升序排序，再按照年龄升序排序输出，请取出相应数据。
SELECT device_id, gpa,age 
from user_profile
order by gpa, age

38.题目：现在运营想要取出用户信息表中所有的明细数据，并先按照gpa、年龄降序排序输出，请取出相应数据。
SELECT device_id, gpa,age 
from user_profile
order by gpa DESC, age DESC


39.现在运营想要了解2021年8月份所有练习过题目的总用户数和练习过题目的总次数，请取出相应结果
select 
count(distinct device_id) as did_cnt,
count(question_id) as question_cnt
from question_practice_detail
where date like '2021-08-%'



























